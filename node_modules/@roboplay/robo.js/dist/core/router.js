import { logger } from './logger.js';
import { createRouter } from './radix3.js';

class f{_router=createRouter();_routes=[];addRoute(r){this._router.insert(r.path,r),this._routes.push(r);}find(r){logger.debug(`Router.find(${r})`);const s=r.includes("?"),t=this._router.lookup(s?r.substring(0,r.indexOf("?")):r);return logger.debug("Found matching API Route...",t),t?{handler:t.handler,params:t.params,path:t.path,query:s?l(r):{}}:null}removeRoute(r){this._router.remove(r);const s=this._routes.findIndex(t=>t.path===r);this._routes.splice(s,1);}stats(){return {key:"radix-router",numRoutes:this._routes.length,routes:this._routes}}}const l=o=>{const r={},s=o.substring(o.indexOf("?")+1).split("&");for(const t of s){const i=t.indexOf("="),u=t.substring(0,i),e=t.substring(i+1)?.split(",")??[],a=Array.isArray(e);if(a)for(let n=0;n<e.length;n++)e[n]=decodeURIComponent(e[n]);a&&e.length===1?r[u]=e[0]:r[u]=e;}return r};

export { f as Router };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=router.js.map