import { existsSync, readFileSync } from 'node:fs';
import { readFile } from 'node:fs/promises';
import v from 'node:path';

function p(c){const r=c.split(`
`),a=/^\s*#/,o=/^['"]/,l=/\\(.)/g;let e="";const n={};for(let s=0;s<r.length;s++){if(e+=r[s],a.test(e)){e="";continue}if(e.endsWith("\\")){e=e.slice(0,-1);continue}const i=e.indexOf("=");if(i===-1){e="";continue}const f=e.substr(0,i).trim();let t=e.substr(i+1).trim();o.test(t)&&(t=t.slice(1,-1).replace(l,"$1")),n[f]=t,e="";}return n}async function w(c={}){const{filePath:r=v.join(process.cwd(),".env")}=c;if(!existsSync(r))return;const a=c.sync?readFileSync(r,"utf-8"):await readFile(r,"utf-8"),o=p(a),l=/\${(.+?)}/g,e={...process.env};try{for(const n in o){if(n in e)continue;const s=new Set;let i=o[n];for(;l.test(i);)i=i.replace(l,(f,t)=>{if(s.has(t))throw new Error(`Circular reference detected in environment variable "${n}"`);return s.add(t),e[t]||o[t]||""});e[n]=i;}Object.assign(process.env,e);}catch(n){console.error("Error while loading environment variables:",n);}}

export { w as loadEnv };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=dotenv.js.map