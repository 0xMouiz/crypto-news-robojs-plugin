{"version":3,"sources":["../../src/core/handlers.ts"],"names":["portal","getSage","timeout","getConfig","logger","BUFFER","DEFAULT_CONFIG","TIMEOUT","printErrorResponse","color","path","executeAutocompleteHandler","interaction","commandKey","command","middleware","result","error","config","promises","timeoutDuration","response","executeCommandHandler","commandConfig","sage","bufferTime","raceResult","message","reply","executeContextHandler","target","executeEventHandler","plugins","eventName","eventData","callbacks","isLifecycleEvent","callback","handlerPromise","timeoutPromise","metaOptions","nestedError"],"mappings":"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","sourcesContent":["import { portal } from './robo.js'\nimport { CommandInteraction, ContextMenuCommandInteraction } from 'discord.js'\nimport { getSage, timeout } from '../cli/utils/utils.js'\nimport { getConfig } from './config.js'\nimport { logger } from './logger.js'\nimport { BUFFER, DEFAULT_CONFIG, TIMEOUT } from './constants.js'\nimport { printErrorResponse } from './debug.js'\nimport { color } from './color.js'\nimport path from 'node:path'\nimport type { AutocompleteInteraction } from 'discord.js'\nimport type { CommandConfig, ContextConfig, PluginData } from '../types/index.js'\nimport type { Collection } from 'discord.js'\n\nexport async function executeAutocompleteHandler(interaction: AutocompleteInteraction, commandKey: string) {\n\tconst command = portal.commands.get(commandKey)\n\tif (!command) {\n\t\tlogger.error(`No command matching ${commandKey} was found.`)\n\t\treturn\n\t}\n\n\t// Check if the autocomplete command's module is enabled\n\tif (!portal.module(command.module).isEnabled) {\n\t\tlogger.debug(`Tried to execute disabled command from module: ${color.bold(command.module)}`)\n\t\treturn\n\t}\n\n\t// Execute middleware\n\ttry {\n\t\tfor (const middleware of portal.middleware) {\n\t\t\tlogger.debug(`Executing middleware: ${color.bold(path.join(middleware.plugin?.path ?? '.', middleware.path))}`)\n\t\t\tconst result = await middleware.handler.default({\n\t\t\t\tpayload: [interaction],\n\t\t\t\trecord: command\n\t\t\t})\n\n\t\t\tif (result && result.abort) {\n\t\t\t\tlogger.debug(`Middleware aborted autocomplete: ${color.bold(interaction.commandName)}`)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tlogger.error('Aborting due to middleware error:', error)\n\t\treturn\n\t}\n\n\tconst config = getConfig()\n\ttry {\n\t\t// Delegate to autocomplete handler\n\t\tlogger.debug(`Executing autocomplete handler: ${color.bold(path.join(command.plugin?.path ?? '.', command.path))}`)\n\t\tconst promises = [command.handler.autocomplete(interaction)]\n\t\tconst timeoutDuration = config?.timeouts?.autocomplete\n\n\t\t// Enforce timeout only if custom timeout is configured\n\t\tif (timeoutDuration) {\n\t\t\tpromises.push(timeout(() => [], timeoutDuration))\n\t\t}\n\n\t\t// Wait for response or timeout\n\t\tconst response = await Promise.race(promises)\n\t\tif (!response) {\n\t\t\tthrow new Error('Autocomplete timed out')\n\t\t}\n\n\t\tawait interaction.respond(response)\n\t} catch (error) {\n\t\tlogger.error('Autocomplete error:', error)\n\t}\n}\n\nexport async function executeCommandHandler(interaction: CommandInteraction, commandKey: string) {\n\t// Find command handler\n\tconst command = portal.commands.get(commandKey)\n\tif (!command) {\n\t\tlogger.error(`No command matching \"${commandKey}\" was found.`)\n\t\treturn\n\t}\n\n\t// Check if the command's module is enabled\n\tif (!portal.module(command.module).isEnabled) {\n\t\tlogger.debug(`Tried to execute disabled command from module: ${color.bold(command.module)}`)\n\t\treturn\n\t}\n\n\t// Execute middleware\n\ttry {\n\t\tfor (const middleware of portal.middleware) {\n\t\t\tlogger.debug(`Executing middleware: ${color.bold(path.join(middleware.plugin?.path ?? '.', middleware.path))}`)\n\t\t\tconst result = await middleware.handler.default({\n\t\t\t\tpayload: [interaction],\n\t\t\t\trecord: command\n\t\t\t})\n\n\t\t\tif (result && result.abort) {\n\t\t\t\tlogger.debug(`Middleware aborted command: ${color.bold(commandKey)}`)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tlogger.error('Aborting due to middleware error:', error)\n\t\treturn\n\t}\n\n\t// Prepare options and config\n\tconst commandConfig: CommandConfig = command.handler.config\n\tconst config = getConfig()\n\tconst sage = getSage(commandConfig, config)\n\tlogger.debug(`Sage options:`, sage)\n\n\ttry {\n\t\tlogger.debug(`Executing command handler: ${color.bold(path.join(command.plugin?.path ?? '.', command.path))}`)\n\t\tif (!command.handler.default) {\n\t\t\tthrow `Missing default export function for command: ${color.bold('/' + commandKey)}`\n\t\t}\n\n\t\t// Delegate to command handler\n\t\tconst result = command.handler.default(interaction)\n\t\tconst promises = []\n\t\tlet response\n\n\t\tif (sage.defer && result instanceof Promise) {\n\t\t\tconst bufferTime = timeout(() => BUFFER, sage.deferBuffer)\n\t\t\tconst raceResult = await Promise.race([result, bufferTime])\n\n\t\t\tif (raceResult === BUFFER && !interaction.replied) {\n\t\t\t\tlogger.debug(`Sage is deferring async command...`)\n\t\t\t\tpromises.push(result)\n\t\t\t\tif (!interaction.deferred) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait interaction.deferReply({ ephemeral: sage.ephemeral })\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconst message = error instanceof Error ? error.message : (error as string)\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!message.includes('Unknown interaction') &&\n\t\t\t\t\t\t\t!message.includes('Interaction has already been acknowledged')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow error\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger.debug(`Interaction was already handled, skipping Sage deferral`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresponse = raceResult\n\t\t\t}\n\t\t}\n\n\t\t// Enforce timeout only if custom timeout is configured\n\t\tif (promises.length > 0) {\n\t\t\tif (config?.timeouts?.commandDeferral) {\n\t\t\t\tpromises.push(timeout(() => TIMEOUT, config.timeouts.commandDeferral))\n\t\t\t}\n\n\t\t\t// Wait for response or timeout\n\t\t\tresponse = await Promise.race(promises)\n\t\t\tif (response === TIMEOUT) {\n\t\t\t\tthrow new Error('Command timed out')\n\t\t\t}\n\t\t} else if (!(result instanceof Promise)) {\n\t\t\tresponse = result\n\t\t}\n\n\t\t// Stop here if command returned nothing\n\t\tif (response === undefined) {\n\t\t\tlogger.debug('Command returned void, skipping response')\n\t\t\treturn\n\t\t}\n\n\t\tlogger.debug(`Sage is handling reply:`, response)\n\t\tconst reply = typeof response === 'string' ? { content: response } : response\n\t\tif (interaction.deferred) {\n\t\t\tawait interaction.editReply(reply)\n\t\t} else {\n\t\t\tawait interaction.reply(reply)\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error)\n\t\tprintErrorResponse(error, interaction)\n\t}\n}\n\nexport async function executeContextHandler(interaction: ContextMenuCommandInteraction, commandKey: string) {\n\t// Find command handler\n\tconst command = portal.context.get(commandKey)\n\tif (!command) {\n\t\tlogger.error(`No context menu command matching \"${commandKey}\" was found.`)\n\t\treturn\n\t}\n\n\t// Check if the context menu's module is enabled\n\tif (!portal.module(command.module).isEnabled) {\n\t\tlogger.debug(`Tried to execute disabled context menu command from module: ${color.bold(command.module)}`)\n\t\treturn\n\t}\n\n\t// Execute middleware\n\ttry {\n\t\tfor (const middleware of portal.middleware) {\n\t\t\tlogger.debug(`Executing middleware: ${color.bold(path.join(middleware.plugin?.path ?? '.', middleware.path))}`)\n\t\t\tconst result = await middleware.handler.default({\n\t\t\t\tpayload: [interaction],\n\t\t\t\trecord: command\n\t\t\t})\n\n\t\t\tif (result && result.abort) {\n\t\t\t\tlogger.debug(`Middleware aborted context command: ${color.bold(commandKey)}`)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tlogger.error('Aborting due to middleware error:', error)\n\t\treturn\n\t}\n\n\t// Prepare options and config\n\tconst commandConfig: ContextConfig = command.handler.config\n\tconst config = getConfig()\n\tconst sage = getSage(commandConfig, config)\n\tlogger.debug(`Sage options:`, sage)\n\n\ttry {\n\t\tlogger.debug(`Executing context menu handler: ${color.bold(path.join(command.plugin?.path ?? '.', command.path))}`)\n\t\tif (!command.handler.default) {\n\t\t\tthrow `Missing default export function for command: ${color.bold('/' + commandKey)}`\n\t\t}\n\n\t\t// Determine target\n\t\tlet target\n\t\tif (interaction.isMessageContextMenuCommand()) {\n\t\t\ttarget = interaction.targetMessage\n\t\t} else if (interaction.isUserContextMenuCommand()) {\n\t\t\ttarget = interaction.targetUser\n\t\t}\n\n\t\t// Delegate to context menu handler\n\t\tconst result = command.handler.default(interaction, target)\n\t\tconst promises = []\n\t\tlet response\n\n\t\tif (sage.defer && result instanceof Promise) {\n\t\t\tconst bufferTime = timeout(() => BUFFER, sage.deferBuffer)\n\t\t\tconst raceResult = await Promise.race([result, bufferTime])\n\n\t\t\tif (raceResult === BUFFER && !interaction.replied) {\n\t\t\t\tlogger.debug(`Sage is deferring async command...`)\n\t\t\t\tpromises.push(result)\n\t\t\t\tif (!interaction.deferred) {\n\t\t\t\t\tawait interaction.deferReply({ ephemeral: sage.ephemeral })\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresponse = raceResult\n\t\t\t}\n\t\t}\n\n\t\t// Enforce timeout only if custom timeout is configured\n\t\tif (promises.length > 0) {\n\t\t\tif (config?.timeouts?.commandDeferral) {\n\t\t\t\tpromises.push(timeout(() => TIMEOUT, config.timeouts.commandDeferral))\n\t\t\t}\n\n\t\t\t// Wait for response or timeout\n\t\t\tresponse = await Promise.race(promises)\n\t\t\tif (response === TIMEOUT) {\n\t\t\t\tthrow new Error('Context menu command timed out')\n\t\t\t}\n\t\t} else if (!(result instanceof Promise)) {\n\t\t\tresponse = result\n\t\t}\n\n\t\t// Stop here if command returned nothing\n\t\tif (response === undefined) {\n\t\t\tlogger.debug('Context menu command returned void, skipping response')\n\t\t\treturn\n\t\t}\n\n\t\tlogger.debug(`Sage is handling reply:`, response)\n\t\tconst reply = typeof response === 'string' ? { content: response } : response\n\t\tif (interaction.deferred) {\n\t\t\tawait interaction.editReply(reply)\n\t\t} else {\n\t\t\tawait interaction.reply(reply)\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error)\n\t\tprintErrorResponse(error, interaction)\n\t}\n}\n\nexport async function executeEventHandler(\n\tplugins: Collection<string, PluginData> | null,\n\teventName: string,\n\t...eventData: unknown[]\n) {\n\tconst callbacks = portal.events.get(eventName)\n\tif (!callbacks?.length) {\n\t\treturn Promise.resolve()\n\t}\n\n\tconst config = getConfig()\n\tconst isLifecycleEvent = eventName.startsWith('_')\n\tawait Promise.all(\n\t\tcallbacks.map(async (callback) => {\n\t\t\ttry {\n\t\t\t\tlogger.debug(`Executing event handler: ${color.bold(path.join(callback.plugin?.path ?? '.', callback.path))}`)\n\t\t\t\tif (!callback.handler.default) {\n\t\t\t\t\tthrow `Missing default export function for event: ${color.bold(eventName)}`\n\t\t\t\t}\n\n\t\t\t\t// Check if the command's module is enabled\n\t\t\t\tif (!portal.module(callback.module).isEnabled) {\n\t\t\t\t\tlogger.debug(`Tried to execute disabled event from module: ${color.bold(callback.module)}`)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// Execute middleware\n\t\t\t\ttry {\n\t\t\t\t\tfor (const middleware of portal.middleware) {\n\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t`Executing middleware: ${color.bold(path.join(middleware.plugin?.path ?? '.', middleware.path))}`\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconst result = await middleware.handler.default({\n\t\t\t\t\t\t\tpayload: eventData,\n\t\t\t\t\t\t\trecord: callback\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (result && result.abort) {\n\t\t\t\t\t\t\tlogger.debug(`Middleware aborted event: ${color.bold(eventName)}`)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tlogger.error('Aborting due to middleware error:', error)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// Execute handler without timeout if not a lifecycle event\n\t\t\t\tconst handlerPromise = callback.handler.default(...eventData, plugins?.get(callback.plugin?.name)?.options)\n\t\t\t\tif (!isLifecycleEvent) {\n\t\t\t\t\treturn await handlerPromise\n\t\t\t\t}\n\n\t\t\t\t// Enforce timeouts for lifecycle events\n\t\t\t\tconst timeoutPromise = timeout(() => TIMEOUT, config?.timeouts?.lifecycle || DEFAULT_CONFIG.timeouts.lifecycle)\n\t\t\t\treturn await Promise.race([handlerPromise, timeoutPromise])\n\t\t\t} catch (error) {\n\t\t\t\ttry {\n\t\t\t\t\tconst metaOptions = plugins?.get(callback.plugin?.name)?.metaOptions ?? {}\n\t\t\t\t\tlet message\n\n\t\t\t\t\tif (error === TIMEOUT) {\n\t\t\t\t\t\tmessage = `${eventName} lifecycle event handler timed out`\n\t\t\t\t\t\tlogger.warn(message)\n\t\t\t\t\t} else if (!callback.plugin) {\n\t\t\t\t\t\tmessage = `Error executing ${eventName} event handler`\n\t\t\t\t\t\tlogger.error(message, error)\n\t\t\t\t\t} else if (eventName === '_start' && metaOptions.failSafe) {\n\t\t\t\t\t\tmessage = `${callback.plugin.name} plugin failed to start`\n\t\t\t\t\t\tlogger.warn(message, error)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage = `${callback.plugin.name} plugin error in event ${eventName}`\n\t\t\t\t\t\tlogger.error(message, error)\n\t\t\t\t\t}\n\n\t\t\t\t\t// Print error response to Discord if in development mode\n\t\t\t\t\tprintErrorResponse(error, eventData[0], message, callback)\n\t\t\t\t} catch (nestedError) {\n\t\t\t\t\tlogger.error(`Error handling event error...`, nestedError)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t)\n}\n"]}