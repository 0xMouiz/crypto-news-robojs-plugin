import fs from 'node:fs/promises';
import path from 'node:path';
import pLimit from './utils.js';

const concurrencyLimit = 100;
const limit = pLimit(concurrencyLimit);
async function hasFilesRecursively(dirPath) {
  let entries;
  try {
    entries = await fs.readdir(dirPath, { withFileTypes: true });
  } catch (err) {
    return false;
  }
  const results = await Promise.all(
    entries.map(
      (entry) => limit(async () => {
        if (entry.isFile()) {
          return path.extname(entry.name) === ".js";
        }
        if (entry.isDirectory()) {
          const subdirPath = path.join(dirPath, entry.name);
          return await hasFilesRecursively(subdirPath);
        }
        return false;
      })
    )
  );
  return results.some((result) => result);
}

export { hasFilesRecursively };
